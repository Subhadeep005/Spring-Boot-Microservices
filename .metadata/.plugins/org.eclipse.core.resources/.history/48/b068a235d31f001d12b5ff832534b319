package io.javabrains.moviecatalogservice.resource;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import io.javabrains.moviecatalogservice.models.CatalogItem;
import io.javabrains.moviecatalogservice.models.Movie;
import io.javabrains.moviecatalogservice.models.Rating;

@RestController
@RequestMapping("/catalog")
public class MovieCatalogResource {

	@Autowired
	RestTemplate restTemplate;
	@Autowired
	private WebClient.Builder webClientBuilder;

	@RequestMapping("/{userId}")
	public List<CatalogItem> getCatalog(@PathVariable("userId") String userId) {

		// get all rated movie IDs
		//List<Rating> ratings = Arrays.asList(new Rating("1234", 4), new Rating("5678", 3));
		
		List<Rating> ratings = restTemplate.getForObject("http://localhost:8082/ratingsdata/users/" + userId, Movie.class);

		return ratings.stream().map(rating -> {
			Movie movie = restTemplate.getForObject("http://localhost:8083/movies/" + rating.getMovieId(), Movie.class);
			
			/*
			 * Movie movie =
			 * webClientBuilder.build().get().uri("http://localhost:8083/movies/" +
			 * rating.getMovieId()) .retrieve().bodyToMono(Movie.class).block();
			 */

			return new CatalogItem(movie.getName(), "Test", rating.getRating());
		}).collect(Collectors.toList());
		// for each movie ID, call movie info service and get details
		// put them all together
	}
}
